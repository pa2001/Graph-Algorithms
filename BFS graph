#include<bits/stdc++.h>
using namespace std;
vector<string>color;
vector<int>d,p,ans;
void addedge(vector<int>g[],int u,int v)
{
  g[u].push_back(v);
  g[v].push_back(u);
}
void bfs(vector<int>g[],int s)
{
  queue<int>q;
  q.push(s);
  d[s]=0;
  color[s]="g";
  while(!q.empty())
  {
    int u=q.front();
    q.pop();
    ans.push_back(u);
    cout<<u<<" ";
    for(auto i=g[u].begin();i!=g[u].end();i++)
    {
      if(color[*i]=="w")
      {
        color[*i]="g";
        d[*i]=d[u]+1;
        p[*i]=u;
        q.push(*i);
      }
    }
    color[u]="d";
  }
}
void bfsfull(vector<int>g[],int n)
{
  color.assign(n,"w");
  d.assign(n,0);
  p.assign(n,-1);
  for(int i=0;i<n;i++)
  {
    if(color[i]=="w")
    bfs(g,i);
  }
}
int main()
{
  int n,a,b,e;
  cin>>n>>e;
  vector<int>g[n];
  for(int i=0;i<e;i++)
  {
    cin>>a>>b;
    addedge(g,a,b);
  }
  bfsfull(g,e);
}
